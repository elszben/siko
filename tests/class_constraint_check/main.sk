module Main where

data Boo a = Boo a deriving Show

fmap a b :: (a -> b) -> Boo a -> Boo b
fmap f i = case i of
                Boo a -> Boo (f a)

boo a :: (Show a) => (a -> String) -> String
boo a = a 5

staticFunc a :: (Show a) => a -> String
staticFunc a = "Dummy"

main = do
        a <- show
        a (fmap (\x -> x) (Boo 5))
        a <- staticFunc
        a (fmap (\x -> x) (Boo 5))
        boo show