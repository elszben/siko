module Main where

import Std.Util

data Color = Red Int | Blue deriving (PartialEq, Eq, PartialOrd, Ord)

data Person = { name :: String, age :: Int} deriving (PartialEq, Eq, PartialOrd, Ord)

main  = do
    assert (cmp (Red 5) (Red 5) == Equal)
    assert (cmp (Red 5) (Red 6) == Less)
    assert (cmp (Red 6) (Red 5) == Greater)
    assert (Person { age = 5, name = "Lily" } < Person { age = 6, name = "Lily" })
    assert !(Person { age = 5, name = "Lily" } < Person { age = 5, name = "Lily" })
    assert (Person { age = 5, name = "Lily" } <= Person { age = 5, name = "Lily" })
    assert (Person { age = 5, name = "Lily" } <= Person { age = 6, name = "Lily" })
    assert (Person { age = 6, name = "Lily" } >= Person { age = 5, name = "Lily" })
    assert (Person { age = 6, name = "Lily" } > Person { age = 5, name = "Lily" })
    assert !(Person { age = 5, name = "Lily" } > Person { age = 5, name = "Lily" })