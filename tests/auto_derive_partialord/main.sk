module Main where

import Std.Util

data Color = Red Int | Blue deriving PartialEq, PartialOrd

data Person = { name :: String, age :: Int} deriving PartialEq, PartialOrd

main  = do
    assert (Red 5 < Red 6)
    assert !(Red 5 < Red 5)
    assert (Red 5 <= Red 6)
    assert (Red 5 <= Red 5)
    assert (Red 6 >= Red 5)
    assert (Red 6 > Red 5)
    assert !(Red 5 > Red 5)
    assert (Person { age = 5, name = "Lily" } < Person { age = 6, name = "Lily" })
    assert !(Person { age = 5, name = "Lily" } < Person { age = 5, name = "Lily" })
    assert (Person { age = 5, name = "Lily" } <= Person { age = 5, name = "Lily" })
    assert (Person { age = 5, name = "Lily" } <= Person { age = 6, name = "Lily" })
    assert (Person { age = 6, name = "Lily" } >= Person { age = 5, name = "Lily" })
    assert (Person { age = 6, name = "Lily" } > Person { age = 5, name = "Lily" })
    assert !(Person { age = 5, name = "Lily" } > Person { age = 5, name = "Lily" })