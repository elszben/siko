module Main where

/*
protocol BazProtocol = Baz
protocol FooProtocol = Foo

actor FooActor Foo where
    BazProtocol -> baz
    FooProtocol -> foo
*/

class Deq a where
    deq a :: a -> a -> Bool
    
    deq a b = False

data Vec a = extern

get a :: a -> String
get a = "foo"

instance Deq String where
    deq a b = False

instance Deq Vec a where
    deq a b = deq (get a) (get a)
    //deq a b = False

alma a :: a -> a
alma a = a

class Show a where
    show a :: a -> a -> String

instance Show String where
    show a b = a 

main = do
    //deq "a" "4"
    print (show "a" "a")
    print (show "a" "b")
    