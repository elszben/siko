module Main where

class Boo a where
    boo a :: a -> Int

instance Boo Int where
    boo a = a

data C a b = C1 a b

data A a b = A1 (B a) b (C b Int) deriving Boo
data B a = B1 (A a Int) deriving Boo

/*
instance (Boo a, Boo b, Eq b) => Boo A a b where
    boo a = case a of
            A1 (b1) b c -> boo b1 + boo b + boo c
instance (Boo a) => Boo B a where
    boo a =  case a of
                B1 (A1 b q c) -> boo c
*/

instance (Boo a, Eq a) => Boo C a b where
    boo a = boo a

main = 0